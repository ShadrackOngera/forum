<?php

namespace Tests\Unit;

use Tests\TestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;

class ThreadTest extends TestCase
{

    protected $thread;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->thread = factory('App\Thread')-create();
    }
    /*** @test */
    function a_thread_has_replies()
        {

            $this->assertInstanceOf('Illuminate\Database\Eloquent\Collection', $this->thread->replies);
        }
    /*** @test */
    function a_thread_has_a_creator()
        {
            $thread = factory('App\Thread')->create();
            $this->assertInstanceOf('App\User',  $this->thread->creator);
        }

        /*** @test */
    public function a_thread_can_add_a_reply()
        {
            $this->thread->addReply([
                'body' => 'Foobar',
                'user_id' => 1
            ]);

            $this->assertCount(1, $this->thread->replies);

        }

        function a_thread_has_a_channel(){
        $thread = create('App\Thread');

        $thread->assertInstanceOf('App\channel', $thread->channel);
    }

    /*** @test
     * @param $threads
     */
    function a_thread_can_make_a_string_path($threads){
        $thread = create('App\Thread');

        $this->assertEquals('/threads/'. $thread->channel->slug . '/' . $thread->id, $thread->path());
        $this->assertEquals(
            '/threads/{$this->channel->slug}/{$this->id}' , $threads->path()
        );
    }
}
